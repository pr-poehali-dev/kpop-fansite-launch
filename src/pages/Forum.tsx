import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import Icon from "@/components/ui/icon";

interface ForumPost {
  id: number;
  title: string;
  author: string;
  avatar: string;
  content: string;
  category: string;
  replies: number;
  likes: number;
  timestamp: string;
}

const mockPosts: ForumPost[] = [
  {
    id: 1,
    title: "–ù–æ–≤—ã–π –∞–ª—å–±–æ–º BLACKPINK - –æ–±—Å—É–∂–¥–µ–Ω–∏–µ —Ç—Ä–µ–∫–æ–≤",
    author: "KpopFan2024",
    avatar: "/placeholder.svg",
    content: "–ß—Ç–æ –¥—É–º–∞–µ—Ç–µ –æ –Ω–æ–≤–æ–º –∞–ª—å–±–æ–º–µ? –ö–∞–∫–æ–π —Ç—Ä–µ–∫ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è?",
    category: "BLACKPINK",
    replies: 23,
    likes: 45,
    timestamp: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥",
  },
  {
    id: 2,
    title: "BTS comeback - –∫–æ–≥–¥–∞ –∂–¥–∞—Ç—å?",
    author: "ArmyForever",
    avatar: "/placeholder.svg",
    content: "–ï—Å—Ç—å –ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –Ω–æ–≤–æ—Å—Ç–∏ –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–º –∫–∞–º–±—ç–∫–µ BTS?",
    category: "BTS",
    replies: 67,
    likes: 89,
    timestamp: "5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥",
  },
  {
    id: 3,
    title: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ –≤ K-pop",
    author: "KpopGuide",
    avatar: "/placeholder.svg",
    content:
      "–°–æ—Å—Ç–∞–≤–ª—è—é —Å–ø–∏—Å–æ–∫ must-listen —Ç—Ä–µ–∫–æ–≤ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ç–æ–ª—å–∫–æ –∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å K-pop",
    category: "–û–±—â–µ–µ",
    replies: 34,
    likes: 56,
    timestamp: "1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥",
  },
];

export default function Forum() {
  const [posts, setPosts] = useState<ForumPost[]>(mockPosts);
  const [newPostTitle, setNewPostTitle] = useState("");
  const [newPostContent, setNewPostContent] = useState("");
  const [selectedCategory, setSelectedCategory] = useState("–û–±—â–µ–µ");

  const categories = [
    "–û–±—â–µ–µ",
    "BTS",
    "BLACKPINK",
    "TWICE",
    "aespa",
    "NewJeans",
    "–î—Ä—É–≥–∏–µ",
  ];

  const handleCreatePost = () => {
    if (newPostTitle.trim() && newPostContent.trim()) {
      const newPost: ForumPost = {
        id: posts.length + 1,
        title: newPostTitle,
        author: "–ì–æ—Å—Ç—å",
        avatar: "/placeholder.svg",
        content: newPostContent,
        category: selectedCategory,
        replies: 0,
        likes: 0,
        timestamp: "—Ç–æ–ª—å–∫–æ —á—Ç–æ",
      };
      setPosts([newPost, ...posts]);
      setNewPostTitle("");
      setNewPostContent("");
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 to-purple-50 p-4">
      <div className="max-w-4xl mx-auto space-y-6">
        {/* Header */}
        <div className="text-center space-y-2">
          <h1 className="text-4xl font-bold bg-gradient-to-r from-pink-600 to-purple-600 bg-clip-text text-transparent">
            K-pop –§–æ—Ä—É–º üéµ
          </h1>
          <p className="text-gray-600">
            –û–±—Å—É–∂–¥–∞–π –ª—é–±–∏–º—ã—Ö –∞–π–¥–æ–ª–æ–≤ –∏ –¥–µ–ª–∏—Å—å –º–Ω–µ–Ω–∏–µ–º –æ –º—É–∑—ã–∫–µ
          </p>
        </div>

        {/* Create Post Form */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Icon name="PlusCircle" size={20} />
              –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Input
                placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å—Ç–∞"
                value={newPostTitle}
                onChange={(e) => setNewPostTitle(e.target.value)}
              />
              <select
                className="px-3 py-2 border border-gray-300 rounded-md"
                value={selectedCategory}
                onChange={(e) => setSelectedCategory(e.target.value)}
              >
                {categories.map((cat) => (
                  <option key={cat} value={cat}>
                    {cat}
                  </option>
                ))}
              </select>
            </div>
            <Textarea
              placeholder="–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ—Å—Ç–∞..."
              value={newPostContent}
              onChange={(e) => setNewPostContent(e.target.value)}
              rows={3}
            />
            <Button onClick={handleCreatePost} className="w-full">
              <Icon name="Send" size={16} className="mr-2" />
              –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
            </Button>
          </CardContent>
        </Card>

        {/* Posts List */}
        <div className="space-y-4">
          {posts.map((post) => (
            <Card key={post.id} className="hover:shadow-md transition-shadow">
              <CardContent className="p-6">
                <div className="flex items-start justify-between mb-4">
                  <div className="flex items-center gap-3">
                    <Avatar>
                      <AvatarImage src={post.avatar} />
                      <AvatarFallback>{post.author[0]}</AvatarFallback>
                    </Avatar>
                    <div>
                      <h3 className="font-semibold text-lg">{post.title}</h3>
                      <p className="text-sm text-gray-600">
                        {post.author} ‚Ä¢ {post.timestamp}
                      </p>
                    </div>
                  </div>
                  <Badge variant="outline">{post.category}</Badge>
                </div>

                <p className="text-gray-700 mb-4">{post.content}</p>

                <div className="flex items-center gap-4 text-sm text-gray-500">
                  <div className="flex items-center gap-1">
                    <Icon name="MessageCircle" size={16} />
                    {post.replies} –æ—Ç–≤–µ—Ç–æ–≤
                  </div>
                  <div className="flex items-center gap-1">
                    <Icon name="Heart" size={16} />
                    {post.likes} –ª–∞–π–∫–æ–≤
                  </div>
                  <Button variant="ghost" size="sm">
                    <Icon name="Reply" size={16} className="mr-1" />
                    –û—Ç–≤–µ—Ç–∏—Ç—å
                  </Button>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Categories Filter */}
        <Card>
          <CardHeader>
            <CardTitle>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="flex flex-wrap gap-2">
              {categories.map((category) => (
                <Badge
                  key={category}
                  variant="secondary"
                  className="cursor-pointer hover:bg-primary hover:text-white"
                >
                  {category}
                </Badge>
              ))}
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
